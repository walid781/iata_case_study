AWSTemplateFormatVersion: 2010-09-09
Parameters:
  deploymentBucket:
    Description: Name of the deployment bucket
    Type: String
  lambdaZipPath:
    Description: path of lambda package
    Type: String

Mappings:
  nameing:
    lambda:
      prefix: apriso-devhive-resources
    role:
      prefix: role-cdf-iata-cs
    policy:
      prefix: policy-cdf-iata-cs
    dataBucket:
      name:  s3-cdf-walid-iata-case-study



Description: The AWS CloudFormation template for this Serverless application
Resources:
  # DataDashingestionLogGroup:
  #   Type: 'AWS::Logs::LogGroup'
  #   Properties:
  #     LogGroupName: /aws/lambda/lambda-iata-cs-data-ingestion
  # DataDashextractionLogGroup:
  #   Type: 'AWS::Logs::LogGroup'
  #   Properties:
  #     LogGroupName: /aws/lambda/lambda-iata-cs-data-extraction
  LambdaDataIngestion:
    Type: 'AWS::Lambda::Function'
    Properties:
      Code:
        S3Bucket: s3-iata-case-study-deployment-bucket
        S3Key: package/lambda.zip
      Handler: lambda.data_ingestion.handler.lambda_handler
      Runtime: python3.11
      FunctionName: !Sub 
        - '${lambda_prefix}-data-ingestion'
        - lambda_prefix: !FindInMap [ nameing, lambda, prefix]
  
      MemorySize: 1024
      Timeout: 300
      Environment:
        Variables:
          BUCKET_NAME: !FindInMap [ nameing, dataBucket, name]
          ZIP_PATH: ZIP/
          RAW_PATH: RAW/
          CLEANED_PATH: CLEANED/
          LOG_LEVEL: INFO
      Role: !GetAtt 
        - lambdaRole
        - Arn
      Layers:
        - arn:aws:lambda:eu-central-1:336392948345:layer:AWSSDKPandas-Python311:2
    DependsOn:
      - lambdaRole

  LambdaDataExtraction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Code:
        S3Bucket: s3-iata-case-study-deployment-bucket
        S3Key: package/lambda.zip
      Handler: lambda.data_extraction.handler.lambda_handler
      Runtime: python3.11
      FunctionName: !Sub 
        - '${lambda_prefix}-data-extraction'
        - lambda_prefix: !FindInMap [ nameing, lambda, prefix]
      MemorySize: 1024
      Timeout: 300
      Environment:
        Variables:
          BUCKET_NAME: s3-walid-iata-case-study
          ZIP_PATH: ZIP/
          RAW_PATH: RAW/
          CLEANED_PATH: CLEANED/
          LOG_LEVEL: INFO
      Role: !GetAtt 
        - lambdaRole
        - Arn
      Layers:
        - arn:aws:lambda:eu-central-1:336392948345:layer:AWSSDKPandas-Python311:2
    DependsOn:
      - lambdaRole
  # DataDashingestionLambdaVersionqSJEItrDBhSBnpLDjLbS9T03RtGsAxPietwiaHqkAxQ:
  #   Type: 'AWS::Lambda::Version'
  #   DeletionPolicy: Retain
  #   Properties:
  #     FunctionName: !Ref DataDashingestionLambdaFunction
  #     CodeSha256: g46eTSOM6oYMIPla7Gi0KVMePXVtOeTX9b1u10/9E+c=
  # DataDashextractionLambdaVersionKKLAv513CuQkm8GemiHi8SY5fPwU2P7GpxYp9LyxpZs:
  #   Type: 'AWS::Lambda::Version'
  #   DeletionPolicy: Retain
  #   Properties:
  #     FunctionName: !Ref DataDashextractionLambdaFunction
  #     CodeSha256: g46eTSOM6oYMIPla7Gi0KVMePXVtOeTX9b1u10/9E+c=
  # DataDashextractionCustomS31:
  #   Type: 'Custom::S3'
  #   Version: 1
  #   DependsOn:
  #     - DataDashextractionLambdaFunction
  #     - CustomDashresourceDashexistingDashs3LambdaFunction
  #   Properties:
  #     ServiceToken: !GetAtt 
  #       - CustomDashresourceDashexistingDashs3LambdaFunction
  #       - Arn
  #     FunctionName: lambda-iata-cs-data-extraction
  #     BucketName: s3-walid-iata-case-study
  #     BucketConfigs:
  #       - Event: 's3:ObjectCreated:*'
  #         Rules:
  #           - Prefix: ZIP/
  #           - Suffix: .zip
  # IamRoleCustomResourcesLambdaExecution:
  #   Type: 'AWS::IAM::Role'
  #   Properties:
  #     AssumeRolePolicyDocument:
  #       Version: 2012-10-17
  #       Statement:
  #         - Effect: Allow
  #           Principal:
  #             Service:
  #               - lambda.amazonaws.com
  #           Action:
  #             - 'sts:AssumeRole'
  #     Policies:
  #       - PolicyName: !Join 
  #           - '-'
  #           - - dev
  #             - iata-case-study
  #             - custom-resources-lambda
  #         PolicyDocument:
  #           Version: 2012-10-17
  #           Statement:
  #             - Effect: Allow
  #               Resource: !Join 
  #                 - ':'
  #                 - - arn
  #                   - !Ref 'AWS::Partition'
  #                   - s3
  #                   - ''
  #                   - ''
  #                   - s3-walid-iata-case-study
  #               Action:
  #                 - 's3:PutBucketNotification'
  #                 - 's3:GetBucketNotification'
  #             - Effect: Allow
  #               Resource: !Join 
  #                 - ':'
  #                 - - arn
  #                   - !Ref 'AWS::Partition'
  #                   - lambda
  #                   - !Ref 'AWS::Region'
  #                   - !Ref 'AWS::AccountId'
  #                   - function
  #                   - '*'
  #               Action:
  #                 - 'lambda:AddPermission'
  #                 - 'lambda:RemovePermission'
  # CustomDashresourceDashexistingDashs3LambdaFunction:
  #   Type: 'AWS::Lambda::Function'
  #   Properties:
  #     Code:
  #       S3Bucket: s3-iata-case-study-deployment-bucket
  #       S3Key: >-
  #         serverless/iata-case-study/dev/1701101236141-2023-11-27T16:07:16.141Z/custom-resources.zip
  #     FunctionName: iata-case-study-dev-custom-resource-existing-s3
  #     Handler: s3/handler.handler
  #     MemorySize: 1024
  #     Runtime: nodejs16.x
  #     Timeout: 180
  #     Role: !GetAtt 
  #       - IamRoleCustomResourcesLambdaExecution
  #       - Arn
  #   DependsOn:
  #     - IamRoleCustomResourcesLambdaExecution
  
  ExtractionLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: '*'
      FunctionName: !GetAtt
        - LambdaDataExtraction
        - Arn
      Principal: s3.amazonaws.com
      SourceAccount: !Ref AWS::AccountId
      SourceArn: !GetAtt
        - S3Bucket
        - Arn
        
  S3Bucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !FindInMap [ nameing, dataBucket, name]
      VersioningConfiguration:
        Status: Suspended
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: s3:ObjectCreated:*
            Function: !GetAtt
              - LambdaDataExtraction
              - Arn
            Filter:
              S3Key:
                Rules:
                  - Name: prefix
                    Value: ZIP/
                  - Name: suffix
                    Value: .zip
    DeletionPolicy: Retain
  
  

  lambdaRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub 
        - '${role_prefix}-lambda-role'
        - role_prefix: !FindInMap [ nameing, role, prefix]
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      Policies:
        - PolicyName: !Sub 
          - '${policy_prefix}-s3-data-access'
          - policy_prefix: !FindInMap [ nameing, policy, prefix]
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 's3:*'
                Resource:
                  - !Sub 
                    - 'arn:aws:s3:::${dataBucket}'
                    - dataBucket: !FindInMap [ nameing, dataBucket, name]
                  - !Sub 
                    - 'arn:aws:s3:::${dataBucket}/*'
                    - dataBucket: !FindInMap [ nameing, dataBucket, name]
Outputs:
  ServerlessDeploymentBucketName:
    Value: s3-iata-case-study-deployment-bucket
    Export:
      Name: cdf-iata-case-study-dev-ServerlessDeploymentBucketName
